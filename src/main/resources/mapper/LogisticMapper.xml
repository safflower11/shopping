<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lut.shopping.mapper.LogisticMapper">
  <resultMap id="BaseResultMap" type="com.lut.shopping.bean.Logistic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="getdate" jdbcType="TIMESTAMP" property="getdate" />
    <result column="deliverdate" jdbcType="TIMESTAMP" property="deliverdate" />
    <result column="commodity_id" jdbcType="INTEGER" property="commodityId" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="address_id" jdbcType="INTEGER" property="addressId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, company, code, status, getdate, deliverdate, commodity_id, order_id, address_id
  </sql>
  <select id="selectByExample" parameterType="com.lut.shopping.bean.LogisticExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_logistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from shop_logistic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shop_logistic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lut.shopping.bean.LogisticExample">
    delete from shop_logistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lut.shopping.bean.Logistic">
    insert into shop_logistic (id, company, code, 
      status, getdate, deliverdate, 
      commodity_id, order_id, address_id
      )
    values (#{id,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{getdate,jdbcType=TIMESTAMP}, #{deliverdate,jdbcType=TIMESTAMP}, 
      #{commodityId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{addressId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lut.shopping.bean.Logistic">
    insert into shop_logistic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="getdate != null">
        getdate,
      </if>
      <if test="deliverdate != null">
        deliverdate,
      </if>
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="addressId != null">
        address_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="getdate != null">
        #{getdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverdate != null">
        #{deliverdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commodityId != null">
        #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lut.shopping.bean.LogisticExample" resultType="java.lang.Long">
    select count(*) from shop_logistic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shop_logistic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.getdate != null">
        getdate = #{record.getdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliverdate != null">
        deliverdate = #{record.deliverdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commodityId != null">
        commodity_id = #{record.commodityId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.addressId != null">
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shop_logistic
    set id = #{record.id,jdbcType=INTEGER},
      company = #{record.company,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      getdate = #{record.getdate,jdbcType=TIMESTAMP},
      deliverdate = #{record.deliverdate,jdbcType=TIMESTAMP},
      commodity_id = #{record.commodityId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      address_id = #{record.addressId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lut.shopping.bean.Logistic">
    update shop_logistic
    <set>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="getdate != null">
        getdate = #{getdate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverdate != null">
        deliverdate = #{deliverdate,jdbcType=TIMESTAMP},
      </if>
      <if test="commodityId != null">
        commodity_id = #{commodityId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="addressId != null">
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lut.shopping.bean.Logistic">
    update shop_logistic
    set company = #{company,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      getdate = #{getdate,jdbcType=TIMESTAMP},
      deliverdate = #{deliverdate,jdbcType=TIMESTAMP},
      commodity_id = #{commodityId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>